# 챕터 3
# 측정의 신뢰도
library(Lahman)
a<-subset(Batting,yearID==2014)
b<-subset(Batting,yearID==2015)
c<-merge(a,b,by="playerID")
d<-c[c$AB.x>10&c$AB.y>10,]
cor(d$HR.x,d$HR.y)
cor(d$H.x/d$AB.x,d$H.y/d$AB.y)

#공격지표들을 이용한 상관관계
library(Lahman)
library(plyr)
a<-subset(Batting,yearID>2014)
a$teamID<-as.numeric(as.factor(a$teamID))
b<-function(a){return(data.frame(
team=ifelse(mean(a$teamID)==a$teamID,0,1),
a$playerID,a$lgID,a$SF,a$SH,a$H,
a$yearID,a$teamID,a$RBI,a$AB))}
d<-ddply(a,.(playerID),b)

d$lag_team<-as.numeric(sapply(1:nrow(d),function(x){
d$a.teamID[x-1]}))
d$lag_RBI<-as.numeric(sapply(1:nrow(d),function(x){d$a.RBI[x-1]}))
d$lag_AB<-as.numeric(sapply(1:nrow(d),function(x){d$a.AB[x-1]}))
d$lag_SF<-as.numeric(sapply(1:nrow(d),function(x){d$a.SF[x-1]}))
d$lag_SH<-as.numeric(sapply(1:nrow(d),function(x){d$a.SH[x-1]}))
d$lag_H<-as.numeric(sapply(1:nrow(d),function(x){d$a.H[x-1]}))
d$lag_playerID<-as.character(sapply(1:nrow(d),function(x){
d$playerID[x-1]}))

d$lag_team<-ifelse(d$playerID==d$lag_playerID,d$lag_team,"NA")
d$lag_avg<-d$lag_H/d$lag_AB
d$sac<-d$lag_SF+d$lag_SH
d<-subset(d,a.AB>400&lag_AB>400)
d$change_rbi<-d$a.RBI/d$lag_RBI
d<-subset(d,!((lag_team=="NA")|(a.teamID==lag_team)))
d$lg_col<-ifelse(d$a.lgID=="NL","gray","black")
d$lg_shape<-ifelse(d$a.lgID=="NL",2,15)

cor(d$lag_avg,d$change_rbi)
plot(d$lag_avg,d$change_rbi,main="Predictor of RBI",xlab=
"Batting Average of Prior year",ylab="Change in RBI",las=1,
cex.axis=0.8,pch=19,col=d$lg_col)

text(x=0.3,y=1.6,label="r=-0.49")
abline(lm(change_rbi~lag_avg,d))
legend(x=0.29,y=1.4,c("National","American"),col=c("gray","black")
,pch=c(19,19))
cor(d$sac,d$change_rbi)

# 그림 3.5 전년도 희생공격과 타점 변화율 상관관계
plot(d$sac,d$change_rbi,main="Predictor of RBI",font.main=3,xlab=
"Sacrifice Flies & Hits",ylab="Change in RBI",las=1,
cex.axis=0.8,pch=d$lg_shape)
text(x=4,y=1.6,label="r=0.50")
abline(lm(change_rbi~sac,d),lty=2,lwd=3)

# 상관관계표 만들기
install.packages(tableHTML)
library(tableHTML)
e<-with(d,data.frame(change_rbi,sac,lag_avg))
colnames(e)<-c("c_RBI","Sacrifice","AVG")
cor(e)
tableHTML(round(cor(e),3))

# 연관성(Association) 분석
library(Lahman)
a<-subset(Batting,yearID>2010,select=c(playerID,teamID))
a$teamID<-factor(a$teamID)
a$teamID<-as.character(a$teamID)

library(data.table)
move<-dcast(setDT(a)[,idx := 1:.N, by = playerID],
playerID~idx, value.var=c("teamID"))
move[is.na(move)]<-""
move[,1]<-NULL
write.csv(move,file="move.csv")

library(arules)
move<-read.transactions("move.csv",sep=",")
summary(move)
itemFrequencyPlot(move,support=0.01,cex.names=0.6)
pattern<-apriori(move,list(support=0.0015,confidence=0.50,minlen=2))
summary(inspect(pattern))
confidence = support(NYA, PHI, PIT) / support(NYA, PHI)
lift = confidence(NYA, PHI --> PIT) / support(NYA, PHI, PIT)

## 지도에 산포도를 그리다: R과 구글의 만남.
## 현재 구글맵 API가 작동되지 않기 때문에, 이 부분은 추가로 업데이터를 해야 할 예정입니다. 일단 책에 나온대로 코드를 올립니다.
install.packages("ggplot2")
install.packages("ggmap")
library(ggplot2)
library(ggmap)
b<-get_map("Kansas City",zoom=4, maptype="roadmap")
c<-ggmap(b)+geom_point(data=a, aes(longitude, latitude), size=1)
c+geom_text(data=a, aes(longitude,latitude-1, label=id), size=2)
a<-read.csv("메이저리그 구장 좌표 정보 csv 데이터가 저장되어 있는 디렉토리 정보")
b<-get_map("Oklahoma City",zoom=4, maptype="roadmap")
c<-ggmap(b)+geom_point(data=a, aes(longitude, latitude), size=1)
c+geom_text(data=a, aes(longitude,latitude-1,label=id), size=2)

# 선수와 감독의 인적 상관성: 네트워크 분석
library(Lahman)
a<-subset(Pitching,yearID>2014&G>35,select=c("playerID","yearID","teamID"))
a$teamyear<-paste(a$teamID,a$yearID,sep="")
b<-subset(Managers,yearID>2014,select=c("playerID","yearID","teamID"))
b$teamyear<-paste(b$teamID,b$yearID,sep="")
c<-merge(a,b,by="teamyear")
c<-subset(c,select=c("playerID.x","playerID.y"))

library(igraph)
mlb_network<-graph.data.frame(c,directed=FALSE)
V(mlb_network)$label<-ifelse(V(mlb_network)$name %in% c(b$playerID)>0,
as.character(b$teamyear),NA)
mlb_network

manager<-V(mlb_network)$name %in% c(b$playerID)+1
plot(mlb_network,vertex.label.cex=0.6,vertex.label.color="black",
vertex.size=c(8,22)[manager],vertex.color=c("gray","white")[manager])

# 기술통계와 추정통계의 매개: 히스토그램은 막대그래프가 아니다
library(Lahman)
a<-subset(Teams, yearID==2015)
b<-barplot(a$HR)
text(b,par("usr")[3],labels=a$teamID,srt=60,adj=c(1,0.5),xpd=TRUE)
a<-subset(Batting,playerID=="jeterde01")
hist(a$HR,xlab="Homerun",main="Histrogram of Jeter's HR",las=1)
hist(a$HR,xlab="Homerun",main="Histrogram of Jeter's HR",las=1,
breaks=seq(from=0, to=27,by=3))

# 히스토그램과 확률밀도함수가 만나다: 패키지 lattice
library(Lahman)
a<-subset(Teams,yearID>1990)
a$attend<-a$attendance/a$G
a$affiliation<-paste(a$lgID,a$divID)

# 그림 3.19 지구별 게임당 관중수 히스토그램 및 모수확률밀도함수
library(lattice)
histogram(
~a$attend|a$affiliation,type="density",panel=function(x,...){
panel.histogram(x,...,col="gray")
apg<-seq(min(x),max(x))
density<-dnorm(apg,mean(x),sd(x))
panel.lines(apg,density,col="black")})

# 그림 3.20 지구별 게임당 관중수 히스토그램 및 비모수확률밀도함수
histogram(
~a$attend|a$affiliation,type="density",panel=function(x,...){
panel.histogram(x,...,col="gray")
apg<-seq(min(x),max(x))
density<-dnorm(apg,mean(x),sd(x))
panel.densityplot(x,col="black",plot.points=FALSE)})



